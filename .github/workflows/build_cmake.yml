name: Cross Platform build matrix

on: [push, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "windows_msvc.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            archiver: "7z a",
            generators: "Visual Studio 16 2019"
          }
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to Windows PATH
        if: ${{ matrix.config.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install dependencies on Ubuntu Latest
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: |
          sudo apt install xorg-dev
          wget https://github.com/conan-io/conan/releases/latest/download/conan-ubuntu-64.deb
          sudo dpkg -i conan-ubuntu-64.deb
          conan profile new --detect default
          conan profile update settings.build_type=Release default
          conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
          conan config set general.revisions_enabled=1
          mkdir build
          cd build
          conan install .. --build=missing

      - name: Install dependencies on Windows Latest
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: |
          pip install conan
          conan profile new --detect default
          conan profile update settings.build_type=Release default
          conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
          conan config set general.revisions_enabled=1
          mkdir build
          cd build
          conan install .. --build=missing

      - name: Configure
        shell: bash
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -G "${{ matrix.config.generators }}"

      - name: Windows build compiled project
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: msbuild rtouhou.sln /t:rtouhou_client /p:Configuration="Release" /p:Platform="x64" /p:BuildProjectReferences=false


      - name: Ubuntu build compiled project
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: make